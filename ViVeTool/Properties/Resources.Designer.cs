//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Albacore.ViVeTool.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Albacore.ViVeTool.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ViVeTool v0.3.0 - Windows feature configuration tool
        ///.
        /// </summary>
        internal static string Branding {
            get {
                return ResourceManager.GetString("Branding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changestamp: {0}.
        /// </summary>
        internal static string ChangestampDisplay {
            get {
                return ResourceManager.GetString("ChangestampDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for app updates....
        /// </summary>
        internal static string CheckingAppUpdates {
            get {
                return ResourceManager.GetString("CheckingAppUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for feature dictionary updates....
        /// </summary>
        internal static string CheckingDictUpdates {
            get {
                return ResourceManager.GetString("CheckingDictUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; command has been moved to &apos;{1}&apos; as part of a syntax improvement effort.
        ///Arguments are now position independent and clearly labeled, ambiguous strings of numbers are no longer used.
        ////? can be used to view more information about usage..
        /// </summary>
        internal static string CommandMigrationNote {
            get {
                return ResourceManager.GetString("CommandMigrationNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary update canceled.
        /// </summary>
        internal static string DictUpdateCanceled {
            get {
                return ResourceManager.GetString("DictUpdateCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace current version with new version?.
        /// </summary>
        internal static string DictUpdateConsent {
            get {
                return ResourceManager.GetString("DictUpdateConsent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary update finished.
        /// </summary>
        internal static string DictUpdateFinished {
            get {
                return ResourceManager.GetString("DictUpdateFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exported {0} Runtime type and {1} Boot type feature configuration(s) to {2}.
        /// </summary>
        internal static string ExportSuccess {
            get {
                return ResourceManager.GetString("ExportSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HasSubscriptions: {0}.
        /// </summary>
        internal static string FeatureDisplay_HasSubscriptions {
            get {
                return ResourceManager.GetString("FeatureDisplay_HasSubscriptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Payload         : {0:x}.
        /// </summary>
        internal static string FeatureDisplay_Payload {
            get {
                return ResourceManager.GetString("FeatureDisplay_Payload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PayloadKind     : {0} ({1}).
        /// </summary>
        internal static string FeatureDisplay_PayloadKind {
            get {
                return ResourceManager.GetString("FeatureDisplay_PayloadKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Priority        : {0} ({1}).
        /// </summary>
        internal static string FeatureDisplay_Priority {
            get {
                return ResourceManager.GetString("FeatureDisplay_Priority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State           : {0} ({1}).
        /// </summary>
        internal static string FeatureDisplay_State {
            get {
                return ResourceManager.GetString("FeatureDisplay_State", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type            : {0} ({1}).
        /// </summary>
        internal static string FeatureDisplay_Type {
            get {
                return ResourceManager.GetString("FeatureDisplay_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variant         : {0}.
        /// </summary>
        internal static string FeatureDisplay_Variant {
            get {
                return ResourceManager.GetString("FeatureDisplay_Variant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experiment.
        /// </summary>
        internal static string FeatureType_Experiment {
            get {
                return ResourceManager.GetString("FeatureType_Experiment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override.
        /// </summary>
        internal static string FeatureType_Override {
            get {
                return ResourceManager.GetString("FeatureType_Override", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;Last Known Good&apos; rollback system data corruption was not found.
        /// </summary>
        internal static string FixLKGNotNeeded {
            get {
                return ResourceManager.GetString("FixLKGNotNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;Last Known Good&apos; rollback system data has been fixed successfully.
        /// </summary>
        internal static string FixLKGPerformed {
            get {
                return ResourceManager.GetString("FixLKGPerformed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full reset canceled.
        /// </summary>
        internal static string FullResetCanceled {
            get {
                return ResourceManager.GetString("FullResetCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to perform a full reset?.
        /// </summary>
        internal static string FullResetPrompt {
            get {
                return ResourceManager.GetString("FullResetPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available commands:
        ///  /query		Lists existing feature configuration(s)
        ///  /enable		Enables a feature
        ///  /disable		Disables a feature
        ///  /reset		Removes custom configurations for a specific feature
        ///  /fullreset		Removes all custom feature configurations
        ///  /changestamp		Prints the feature store change counter (changestamp)*
        ///  /querysubs		Lists existing feature usage subscriptions*
        ///  /addsub		Adds a feature usage subscription
        ///  /delsub		Removes a feature usage subscription
        ///  /notifyusage		Fires a feature [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_Commands {
            get {
                return ResourceManager.GetString("Help_Commands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax:
        ///  /export /filename:&lt;path to new file&gt; [/store:&lt;both | runtime | boot&gt;]
        ///
        ///Exports all currently loaded feature configurations to a file. By default both stores are exported.
        ///
        ///Examples:
        ///  /export /filename:features.bin.
        /// </summary>
        internal static string Help_Export {
            get {
                return ResourceManager.GetString("Help_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax:
        ///  /fixlkg
        ///
        ///Attempts to fix corrupted &apos;Last Known Good&apos; rollback system data. Windows system components can occassionally
        ///invalidate this data due to a programming oversight..
        /// </summary>
        internal static string Help_FixLKG {
            get {
                return ResourceManager.GetString("Help_FixLKG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax:
        ///  /fullreset [/store:&lt;both | runtime | boot&gt;]
        ///
        ///This command removes all custom feature configuration overrides, effectively reverting
        ///feature store contents to their clean install state. Both stores are targeted by default.
        ///Use with caution.
        ///
        ///ImageDefault (0) and ImageOverride (15) priority configurations are unaffected by this command..
        /// </summary>
        internal static string Help_FullReset {
            get {
                return ResourceManager.GetString("Help_FullReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax:
        ///  /import /filename:&lt;path to file&gt; [/store:&lt;both | runtime | boot&gt;] [/replace]
        ///
        ///Imports all feature configurations stored in a file into your system. By default both stores will be imported to.
        ///
        ///Specifying /replace performs a full reset before importing data.
        ///
        ///ImageDefault (0) and ImageOverride (15) priority configurations are unaffected by this command.
        ///
        ///Examples:
        ///  /import /filename:features.bin
        ///  /import /filename:features.bin /store:boot /replace.
        /// </summary>
        internal static string Help_Import {
            get {
                return ResourceManager.GetString("Help_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax:
        ///  /lkgstatus
        ///
        ///Queries the &apos;Last Known Good&apos; (LKG) rollback system status. The LKG blob is a snapshot of feature
        ///configurations known to cause no critical system failures.
        ///
        ///Status descriptions:
        ///  - BootPending		Feature configurations have changed since booting up, a reboot is required
        ///			to confirm that they don&apos;t cause boot-time failures
        ///
        ///  - LKGPending		The system was able to boot successfully after a feature confguration change,
        ///			the current state will shortly become the new LKG blob        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_LKGStatus {
            get {
                return ResourceManager.GetString("Help_LKGStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax:
        ///  /notifyusage {{/id:&lt;comma delimited feature IDs&gt; | /name:&lt;comma delimited feature names&gt;}}
        ///  /reportingkind:&lt;0-65535&gt; /reportingoptions:&lt;0-65535&gt;
        ///
        ///Fires a feature usage notification. If a subscription with matching Kind &amp; Options conditions
        ///is found, the Target WNF state ID associated with it receives usage info.
        ///
        ///Features can be specified using both their IDs and names, mixing and matching is allowed.
        ///
        ///Examples:
        ///  /notifyusage /id:12345678 /reportingkind:4 /reportingoptions:1.
        /// </summary>
        internal static string Help_NotifyUsage {
            get {
                return ResourceManager.GetString("Help_NotifyUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax:
        ///  /query [/store:&lt;runtime | boot&gt;] [/id:&lt;comma delimited feature IDs&gt;]
        ///  [/name:&lt;comma delimited feature names&gt;]
        ///
        ///If no store is specified, the Runtime store will be queried by default.
        ///You can specify feature IDs or names to filter the query results, in this case only
        ///the override with the highest priority will be displayed.
        ///
        ///Examples:
        ///  /query
        ///  /query /store:boot /id:12345678
        ///  /query /store:runtime /name:TIFE,STTest.
        /// </summary>
        internal static string Help_Query {
            get {
                return ResourceManager.GetString("Help_Query", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax:
        ///  /reset {{/id:&lt;comma delimited feature IDs&gt; | /name:&lt;comma delimited feature names&gt;}}
        ///  [/priority:&lt;enrollment | service | user | userpolicy | test&gt;] [/store:&lt;both | runtime | boot&gt;]
        ///
        ///Features can be specified using both their IDs and names, mixing and matching is allowed.
        ///
        ///By default the features you&apos;ve chosen will have their configuration overrides erased from
        ///all priorities and both stores. Specifying a priority will limit the scope of the reset.
        ///
        ///ImageDefault (0) and ImageOverride (15) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_Reset {
            get {
                return ResourceManager.GetString("Help_Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax:
        ///  {0} {{/id:&lt;comma delimited feature IDs&gt; | /name:&lt;comma delimited feature names&gt;}} [/variant:&lt;0-63&gt;]
        ///  [/variantpayloadkind:&lt;none | resident | external&gt;] [/variantpayload:&lt;0-4294967295&gt;] [/experiment]
        ///  [/priority:&lt;enrollment | service | user | userpolicy | test&gt;] [/store:&lt;both | runtime | boot&gt;]
        ///
        ///The parameters in square brackets don&apos;t need to be specified and will use these defaults:
        ///  Variant           : 0
        ///  VariantPayloadKind: None
        ///  VariantPayload    : 0
        ///  Experiment        : false
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help_Set {
            get {
                return ResourceManager.GetString("Help_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax:
        ///  {0} {{/id:&lt;comma delimited feature IDs&gt; | /name:&lt;comma delimited feature names&gt;}}
        ///  /reportingkind:&lt;0-65535&gt; /reportingtarget:&lt;wnf state id&gt;{1}
        ///
        ///{2}
        ///
        ///Features can be specified using both their IDs and names, mixing and matching is allowed.
        ///
        ///Examples:
        ///  {0} /id:12345678 /reportingkind:4 /reportingtarget:0d83063ea3bdf875.
        /// </summary>
        internal static string Help_SetSubs {
            get {
                return ResourceManager.GetString("Help_SetSubs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates a feature usage subscription. When the conditions specified by the Kind &amp; Options
        ///parameters are met, the Target WNF state ID receives usage info..
        /// </summary>
        internal static string Help_SetSubs_Add {
            get {
                return ResourceManager.GetString("Help_SetSubs_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes a feature usage subscription..
        /// </summary>
        internal static string Help_SetSubs_Delete {
            get {
                return ResourceManager.GetString("Help_SetSubs_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File contains {0} Runtime type and {1} Boot type applicable feature configuration(s).
        /// </summary>
        internal static string ImportBreakdown {
            get {
                return ResourceManager.GetString("ImportBreakdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing {0} feature configuration(s) into the {1} store....
        /// </summary>
        internal static string ImportProcessing {
            get {
                return ResourceManager.GetString("ImportProcessing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 10 build 18963 or newer is required for this program to function
        ///Your current build: {0}.
        /// </summary>
        internal static string IncompatibleBuild {
            get {
                return ResourceManager.GetString("IncompatibleBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid {1} specification.
        /// </summary>
        internal static string InvalidEnumSpec {
            get {
                return ResourceManager.GetString("InvalidEnumSpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid {1} specification in this scenario.
        /// </summary>
        internal static string InvalidEnumSpecInScenario {
            get {
                return ResourceManager.GetString("InvalidEnumSpecInScenario", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while querying the &apos;Last Known Good&apos; rollback system status ({0}).
        /// </summary>
        internal static string LKGQueryFailed {
            get {
                return ResourceManager.GetString("LKGQueryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LKG status: {0}.
        /// </summary>
        internal static string LKGStatusDisplay {
            get {
                return ResourceManager.GetString("LKGStatusDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while setting the &apos;Last Known Good&apos; rollback system status ({0})
        ///Changes were made but their persistence cannot be guaranteed (Current status: {1}).
        /// </summary>
        internal static string LKGUpdateFailed {
            get {
                return ResourceManager.GetString("LKGUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found release: {0} (published on {1:d})
        ///
        ///Release notes:
        ///{2}
        ///
        ///Download at: {3}.
        /// </summary>
        internal static string NewAppUpdateDisplay {
            get {
                return ResourceManager.GetString("NewAppUpdateDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Newer dictionary found (revision {0}).
        /// </summary>
        internal static string NewDictUpdateDisplay {
            get {
                return ResourceManager.GetString("NewDictUpdateDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No features were specified.
        /// </summary>
        internal static string NoFeaturesSpecified {
            get {
                return ResourceManager.GetString("NoFeaturesSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No file name was specified.
        /// </summary>
        internal static string NoFileNameSpecified {
            get {
                return ResourceManager.GetString("NoFileNameSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re using the latest version.
        /// </summary>
        internal static string NoNewerVersionFound {
            get {
                return ResourceManager.GetString("NoNewerVersionFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Reporting Target was specified.
        /// </summary>
        internal static string NoReportingTargetSpecified {
            get {
                return ResourceManager.GetString("NoReportingTargetSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while firing a usage notification for feature ID {0} ({1}).
        /// </summary>
        internal static string NotifyUsageFailed {
            get {
                return ResourceManager.GetString("NotifyUsageFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully fired usage notification for feature ID {0}.
        /// </summary>
        internal static string NotifyUsageSuccess {
            get {
                return ResourceManager.GetString("NotifyUsageSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to query feature configurations.
        /// </summary>
        internal static string QueryFailed {
            get {
                return ResourceManager.GetString("QueryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to query feature usage subscriptions.
        /// </summary>
        internal static string QuerySubsFailed {
            get {
                return ResourceManager.GetString("QuerySubsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reboot is recommended for all changes to take effect.
        /// </summary>
        internal static string RebootRecommended {
            get {
                return ResourceManager.GetString("RebootRecommended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while resetting feature configurations in the Boot store ({0}), configurations will return after reboot.
        /// </summary>
        internal static string ResetBootFailed {
            get {
                return ResourceManager.GetString("ResetBootFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while resetting feature configurations in the Runtime store ({0}).
        /// </summary>
        internal static string ResetRuntimeFailed {
            get {
                return ResourceManager.GetString("ResetRuntimeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully reset feature configuration(s).
        /// </summary>
        internal static string ResetSuccess {
            get {
                return ResourceManager.GetString("ResetSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while setting feature configurations in the Boot store ({0}), configurations will revert after reboot.
        /// </summary>
        internal static string SetBootFailed {
            get {
                return ResourceManager.GetString("SetBootFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while setting feature configurations in the Runtime store ({0}).
        /// </summary>
        internal static string SetRuntimeFailed {
            get {
                return ResourceManager.GetString("SetRuntimeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while setting feature usage subscriptions in the Boot store ({1}), subscriptions will revert after reboot.
        /// </summary>
        internal static string SetSubsBootFailed {
            get {
                return ResourceManager.GetString("SetSubsBootFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while setting feature usage subscriptions in the Runtime store ({0}).
        /// </summary>
        internal static string SetSubsRuntimeFailed {
            get {
                return ResourceManager.GetString("SetSubsRuntimeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully set feature usage subscription(s).
        /// </summary>
        internal static string SetSubsSuccess {
            get {
                return ResourceManager.GetString("SetSubsSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully set feature configuration(s).
        /// </summary>
        internal static string SetSuccess {
            get {
                return ResourceManager.GetString("SetSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No configuration for feature ID {0} was found in the {1} store.
        /// </summary>
        internal static string SingleQueryFailed {
            get {
                return ResourceManager.GetString("SingleQueryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ReportingKind   : {0}.
        /// </summary>
        internal static string SubscriptionDisplay_ReportingKind {
            get {
                return ResourceManager.GetString("SubscriptionDisplay_ReportingKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ReportingOptions: {0}.
        /// </summary>
        internal static string SubscriptionDisplay_ReportingOptions {
            get {
                return ResourceManager.GetString("SubscriptionDisplay_ReportingOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ReportingTarget : {0:x16}.
        /// </summary>
        internal static string SubscriptionDisplay_ReportingTarget {
            get {
                return ResourceManager.GetString("SubscriptionDisplay_ReportingTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized command: {0}.
        /// </summary>
        internal static string UnrecognizedCommand {
            get {
                return ResourceManager.GetString("UnrecognizedCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized parameter: {0}
        ///.
        /// </summary>
        internal static string UnrecognizedParameter {
            get {
                return ResourceManager.GetString("UnrecognizedParameter", resourceCulture);
            }
        }
    }
}
